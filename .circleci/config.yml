version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout
      - run:
          name: Install pip
          command: python -m ensurepip --upgrade
      - run:
          name: install requirements hahahah
          command: |
            ls

  setup_db:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout
      - run:
          name: Run Python script
          command: |
            ls

  run_project:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout
      - run:
          name: Run Python script
          command: |
            ls

  unit_tests:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout
      - run:
          name: Run Python script
          command: |
            cd IDSIT
            pip install -r requirements.txt
            cd vuln/Tests/unit_tests/
            python unit1.py

  integration_tests:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout
      - run:
        name: Start Django development server in background
        command: |
          cd IDSIT
          pip install -r requirements.txt
          python manage.py runserver &
          sleep 5
      - run:
          name: Run Python script
          command: |
            cd vuln/Tests/integration_tests/
            python int.py
            python int2.py
      - run:
          name: Stop Django server
          command: kill $(lsof -t -i:8000)
  quality_test:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - run:
          name: Run Python script
          command: |
            cd IDSIT/vuln/Tests/quality_test/
            sudo apt install flake8
            flake8 ../../.. > quality.txt
            python quality.py

  report:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout
      - run:
          name: Run Python script
          command: |
            cd IDSIT/vuln/Tests/
            python report.py

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - setup_db:
          requires:
            - build
      - run_project:
          requires:
            - setup_db
      - unit_tests:
          requires:
            - run_project
      - integration_tests:
          requires:
            - run_project
      - quality_test:
          requires:
            - run_project
      - report:
          requires:
            - unit_tests
            - integration_tests
            - quality_test
